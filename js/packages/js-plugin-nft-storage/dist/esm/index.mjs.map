{"version":3,"file":"index.mjs","sources":["../../../../node_modules/it-drain/index.js","../../../../node_modules/it-filter/index.js","../../../../node_modules/it-take/index.js","../../../../node_modules/it-all/index.js","../../../../node_modules/blockstore-core/esm/src/base.js","../../../../node_modules/multiformats/esm/vendor/base-x.js","../../../../node_modules/multiformats/esm/src/bytes.js","../../../../node_modules/multiformats/esm/src/bases/base.js","../../../../node_modules/multiformats/esm/src/bases/base32.js","../../../../node_modules/multiformats/esm/vendor/varint.js","../../../../node_modules/multiformats/esm/src/varint.js","../../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../../node_modules/multiformats/esm/src/bases/base58.js","../../../../node_modules/multiformats/esm/src/cid.js","../../node_modules/ipfs-car/dist/esm/blockstore/memory.js","../../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../../node_modules/multiformats/esm/src/block.js","../../../../node_modules/multiformats/esm/src/hashes/sha2.js","../../src/BlockstoreCarReader.ts","../../src/utils.ts","../../src/NftStorageDriver.ts","../../src/plugin.ts"],"sourcesContent":["'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n","'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","import drain from 'it-drain';\nimport filter from 'it-filter';\nimport take from 'it-take';\nimport all from 'it-all';\nconst sortAll = (iterable, sorter) => {\n  return async function* () {\n    const values = await all(iterable);\n    yield* values.sort(sorter);\n  }();\n};\nexport class BaseBlockstore {\n  open() {\n    return Promise.reject(new Error('.open is not implemented'));\n  }\n  close() {\n    return Promise.reject(new Error('.close is not implemented'));\n  }\n  put(key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'));\n  }\n  get(key, options) {\n    return Promise.reject(new Error('.get is not implemented'));\n  }\n  has(key, options) {\n    return Promise.reject(new Error('.has is not implemented'));\n  }\n  delete(key, options) {\n    return Promise.reject(new Error('.delete is not implemented'));\n  }\n  async *putMany(source, options = {}) {\n    for await (const {key, value} of source) {\n      await this.put(key, value, options);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  async *getMany(source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options);\n    }\n  }\n  async *deleteMany(source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options);\n      yield key;\n    }\n  }\n  batch() {\n    let puts = [];\n    let dels = [];\n    return {\n      put(key, value) {\n        puts.push({\n          key,\n          value\n        });\n      },\n      delete(key) {\n        dels.push(key);\n      },\n      commit: async options => {\n        await drain(this.putMany(puts, options));\n        puts = [];\n        await drain(this.deleteMany(dels, options));\n        dels = [];\n      }\n    };\n  }\n  async *_all(q, options) {\n    throw new Error('._all is not implemented');\n  }\n  async *_allKeys(q, options) {\n    throw new Error('._allKeys is not implemented');\n  }\n  query(q, options) {\n    let it = this._all(q, options);\n    if (q.prefix != null) {\n      it = filter(it, e => e.key.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= (q.offset || 0));\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n  queryKeys(q, options) {\n    let it = this._allKeys(q, options);\n    if (q.prefix != null) {\n      it = filter(it, cid => cid.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= q.offset);\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import { CID } from 'multiformats';\nimport { BaseBlockstore } from 'blockstore-core';\nexport class MemoryBlockStore extends BaseBlockstore {\n    constructor() {\n        super();\n        this.store = new Map();\n    }\n    async *blocks() {\n        for (const [cidStr, bytes] of this.store.entries()) {\n            yield { cid: CID.parse(cidStr), bytes };\n        }\n    }\n    put(cid, bytes) {\n        this.store.set(cid.toString(), bytes);\n        return Promise.resolve();\n    }\n    get(cid) {\n        const bytes = this.store.get(cid.toString());\n        if (!bytes) {\n            throw new Error(`block with cid ${cid.toString()} no found`);\n        }\n        return Promise.resolve(bytes);\n    }\n    has(cid) {\n        return Promise.resolve(this.store.has(cid.toString()));\n    }\n    close() {\n        this.store.clear();\n        return Promise.resolve();\n    }\n}\n","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};","import crypto from 'crypto';\nimport { from } from './hasher.js';\nimport { coerce } from '../bytes.js';\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: input => coerce(crypto.createHash('sha256').update(input).digest())\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: input => coerce(crypto.createHash('sha512').update(input).digest())\n});","import { Blockstore } from 'ipfs-car/blockstore';\nimport type { CID } from 'multiformats';\n\n/**\n * An implementation of the CAR reader interface that is backed by a blockstore.\n * @see https://github.com/nftstorage/nft.storage/blob/0fc7e4e73867c437eac54f75f58a808dd4581c47/packages/client/src/bs-car-reader.js\n */\nexport class BlockstoreCarReader {\n  _version: number;\n  _roots: CID[];\n  _blockstore: Blockstore;\n\n  constructor(roots: CID[], blockstore: Blockstore, version: number = 1) {\n    this._version = version;\n    this._roots = roots;\n    this._blockstore = blockstore;\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  get blockstore() {\n    return this._blockstore;\n  }\n\n  async getRoots() {\n    return this._roots;\n  }\n\n  has(cid: CID) {\n    return this._blockstore.has(cid);\n  }\n\n  async get(cid: CID) {\n    const bytes = await this._blockstore.get(cid);\n    return { cid, bytes };\n  }\n\n  blocks() {\n    return this._blockstore.blocks();\n  }\n\n  async *cids() {\n    for await (const b of this.blocks()) {\n      yield b.cid;\n    }\n  }\n}\n","import type { Blockstore } from 'ipfs-car/blockstore';\nimport type { CID } from 'multiformats';\nimport { CarReader } from 'nft.storage';\nimport * as Block from 'multiformats/block';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport * as dagPb from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport { BlockstoreCarReader } from './BlockstoreCarReader';\n\nexport type EncodedCar = { car: CarReader; cid: CID };\nexport type DagPbLink = dagPb.PBLink;\nexport type DagPbBlock = Block.Block<dagPb.PBNode>;\n\nexport const DEFAULT_GATEWAY_HOST = 'https://nftstorage.link';\n\nexport function toGatewayUri(\n  cid: string,\n  path: string = '',\n  host: string = DEFAULT_GATEWAY_HOST\n): string {\n  let pathPrefix = `/ipfs/${cid}`;\n  if (path) {\n    pathPrefix += '/';\n  }\n  host = host || DEFAULT_GATEWAY_HOST;\n  const base = new URL(pathPrefix, host);\n  const u = new URL(path, base);\n  return u.toString();\n}\n\nexport function toIpfsUri(cid: string, path: string = ''): string {\n  const u = new URL(path, `ipfs://${cid}`);\n  return u.toString();\n}\n\nexport async function toDagPbLink(\n  node: EncodedCar,\n  name: string\n): Promise<DagPbLink> {\n  const block = await node.car.get(node.cid);\n  if (!block) {\n    throw new Error(`invalid CAR: missing block for CID [${node.cid}]`);\n  }\n  return dagPb.createLink(name, block.bytes.byteLength, node.cid);\n}\n\nexport async function toDirectoryBlock(\n  links: DagPbLink[]\n): Promise<DagPbBlock> {\n  const data = new UnixFS({ type: 'directory' }).marshal();\n  const value = dagPb.createNode(data, links);\n  return Block.encode({ value, codec: dagPb, hasher: sha256 });\n}\n\nexport async function toEncodedCar(\n  block: DagPbBlock,\n  blockstore: Blockstore\n): Promise<EncodedCar> {\n  await blockstore.put(block.cid, block.bytes);\n  const car = new BlockstoreCarReader([block.cid], blockstore);\n  const cid = block.cid;\n\n  return { car, cid };\n}\n","import { Blob, NFTStorage } from 'nft.storage';\nimport { MemoryBlockStore } from 'ipfs-car/blockstore/memory';\nimport { NFTStorageMetaplexor } from '@nftstorage/metaplex-auth';\nimport {\n  MetaplexFile,\n  StorageDriver,\n  lamports,\n  Amount,\n  Metaplex,\n  Signer,\n  isKeypairSigner,\n} from '@metaplex-foundation/js';\nimport {\n  toDagPbLink,\n  toDirectoryBlock,\n  toEncodedCar,\n  toGatewayUri,\n  toIpfsUri,\n} from './utils';\n\nexport type NftStorageDriverOptions = {\n  identity?: Signer;\n  token?: string;\n  endpoint?: URL;\n  gatewayHost?: string;\n  batchSize?: number;\n  useGatewayUrls?: boolean;\n};\n\nexport class NftStorageDriver implements StorageDriver {\n  readonly metaplex: Metaplex;\n  readonly identity?: Signer;\n  readonly token?: string;\n  readonly endpoint?: URL;\n  readonly gatewayHost?: string;\n  onStoredChunk?: (size: number) => void;\n  batchSize: number;\n  useGatewayUrls: boolean;\n\n  constructor(metaplex: Metaplex, options: NftStorageDriverOptions = {}) {\n    this.metaplex = metaplex;\n    this.identity = options.identity;\n    this.token = options.token;\n    this.endpoint = options.endpoint;\n    this.gatewayHost = options.gatewayHost;\n    this.batchSize = options.batchSize ?? 50;\n    this.useGatewayUrls = options.useGatewayUrls ?? true;\n  }\n\n  onProgress(callback: (size: number) => void) {\n    this.onStoredChunk = callback;\n    return this;\n  }\n\n  async getUploadPrice(_bytes: number): Promise<Amount> {\n    return lamports(0);\n  }\n\n  async upload(file: MetaplexFile): Promise<string> {\n    return (await this.uploadAll([file]))[0];\n  }\n\n  async uploadAll(files: MetaplexFile[]): Promise<string[]> {\n    if (this.batchSize <= 0) {\n      throw new Error('batchSize must be greater than 0');\n    }\n\n    const client = await this.client();\n    const blockstore = new MemoryBlockStore();\n    const uris: string[] = [];\n    const numBatches = Math.ceil(files.length / this.batchSize);\n    const batches: MetaplexFile[][] = new Array(numBatches)\n      .fill([])\n      .map((_, i) => files.slice(i * this.batchSize, (i + 1) * this.batchSize));\n\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      const batchLinks = [];\n\n      for (let j = 0; j < batch.length; j++) {\n        const file = batch[j];\n        const blob = new Blob([file.buffer]);\n        const node = await NFTStorage.encodeBlob(blob, { blockstore });\n        const fileUri = this.useGatewayUrls\n          ? toGatewayUri(node.cid.toString(), undefined, this.gatewayHost)\n          : toIpfsUri(node.cid.toString());\n        uris.push(fileUri);\n        batchLinks.push(await toDagPbLink(node, file.uniqueName));\n      }\n\n      const batchBlock = await toDirectoryBlock(batchLinks);\n      const { cid, car } = await toEncodedCar(batchBlock, blockstore);\n\n      const options = { onStoredChunk: this.onStoredChunk };\n      const promise = isNFTStorageMetaplexor(client)\n        ? client.storeCar(cid, car, options)\n        : client.storeCar(car, options);\n\n      await promise;\n    }\n\n    return uris;\n  }\n\n  async client(): Promise<NFTStorage | NFTStorageMetaplexor> {\n    if (this.token) {\n      return new NFTStorage({\n        token: this.token,\n        endpoint: this.endpoint,\n      });\n    }\n\n    const signer: Signer = this.identity ?? this.metaplex.identity();\n    const authOptions = {\n      mintingAgent: '@metaplex-foundation/js-plugin-nft-storage',\n      solanaCluster: this.metaplex.cluster,\n      endpoint: this.endpoint,\n    };\n\n    return isKeypairSigner(signer)\n      ? NFTStorageMetaplexor.withSecretKey(signer.secretKey, authOptions)\n      : NFTStorageMetaplexor.withSigner(\n          signer.signMessage.bind(signer),\n          signer.publicKey.toBuffer(),\n          authOptions\n        );\n  }\n}\n\nconst isNFTStorageMetaplexor = (\n  client: NFTStorage | NFTStorageMetaplexor\n): client is NFTStorageMetaplexor => {\n  return 'storeNFTFromFilesystem' in client;\n};\n","import type { Metaplex, MetaplexPlugin } from '@metaplex-foundation/js';\nimport { NftStorageDriver, NftStorageDriverOptions } from './NftStorageDriver';\n\nexport const nftStorage = (\n  options: NftStorageDriverOptions = {}\n): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    metaplex.storage().setDriver(new NftStorageDriver(metaplex, options));\n  },\n});\n"],"names":["drain","source","_","itDrain","filter","fn","entry","itFilter","take","limit","items","itTake","all","arr","push","itAll","sortAll","iterable","sorter","values","sort","BaseBlockstore","open","Promise","reject","Error","close","put","key","val","options","get","has","delete","putMany","value","getMany","deleteMany","batch","puts","dels","commit","_all","q","_allKeys","query","it","prefix","e","toString","startsWith","Array","isArray","filters","reduce","f","orders","offset","i","queryKeys","cid","base","ALPHABET","name","length","TypeError","BASE_MAP","Uint8Array","j","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","encode","ArrayBuffer","isView","buffer","byteOffset","byteLength","from","zeroes","pbegin","pend","size","b58","carry","it1","it2","str","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","string","src","_brrp__multiformats_scope_baseX","equals","aa","bb","ii","coerce","o","constructor","Encoder","baseEncode","bytes","Decoder","baseDecode","codePointAt","undefined","prefixCodePoint","text","JSON","stringify","slice","or","decoder","ComposedDecoder","decoders","input","RangeError","Object","keys","left","right","Codec","encoder","baseX","alphabet","basex","bitsPerChar","codes","end","out","bits","written","SyntaxError","data","pad","mask","rfc4648","base32","encode_1","MSB","REST","MSBALL","INT","pow","num","oldOffset","read","MSB$1","REST$1","buf","res","shift","counter","b","l","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","encodingLength","_brrp_varint","code","encodeTo","int","target","create","digest","sizeOffset","digestOffset","set","Digest","multihash","subarray","a","equalBytes","base58btc","CID","version","asCID","_baseCache","Map","defineProperties","hidden","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","createV1","other","toStringV0","toStringV1","toJSON","hash","Symbol","toStringTag","for","isCID","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","codec","multibaseName","encodeCID","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","next","parse","parseCIDtoBytes","cache","codeOffset","hashOffset","writable","configurable","enumerable","range","message","test","console","warn","Hasher","result","then","links","entries","path","index","element","elementPath","join","tree","node","map","part","remaining","Block","asBlock","split","Boolean","hasher","sha256","crypto","createHash","update","BlockstoreCarReader","roots","blockstore","_version","_roots","_blockstore","getRoots","blocks","cids","DEFAULT_GATEWAY_HOST","toGatewayUri","host","pathPrefix","URL","u","toIpfsUri","toDagPbLink","block","car","dagPb","createLink","toDirectoryBlock","UnixFS","type","marshal","createNode","toEncodedCar","NftStorageDriver","metaplex","identity","token","endpoint","gatewayHost","batchSize","useGatewayUrls","onProgress","callback","onStoredChunk","getUploadPrice","_bytes","lamports","upload","file","uploadAll","files","client","MemoryBlockStore","uris","numBatches","ceil","batches","fill","batchLinks","blob","Blob","NFTStorage","encodeBlob","fileUri","uniqueName","batchBlock","promise","isNFTStorageMetaplexor","storeCar","signer","authOptions","mintingAgent","solanaCluster","cluster","isKeypairSigner","NFTStorageMetaplexor","withSecretKey","secretKey","withSigner","signMessage","bind","publicKey","toBuffer","nftStorage","install","storage","setDriver"],"mappings":"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"}